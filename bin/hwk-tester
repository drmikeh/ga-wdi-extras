#!/bin/bash

VERSION=0.1.5

#
# Find a file recursively but going *up* to parent directories
#
function upsearch_helper() {
  test / == "$PWD" && return || \
  test -e "$1" && echo "$PWD/$1" && return || \
  cd .. && upsearch_helper "$1"
}
function upsearch() {
  pushd . >> /dev/null
  upsearch_helper $*
  popd >> /dev/null
}

# The leading : in the options indicates to not print the standard error messages.
# We print custom error messages below.
while getopts ":vhjr" opt; do
  case $opt in
    j)
      TEST_JAVASCRIPT=true
      ;;
    r)
      TEST_RUBY=true
      ;;
    v)
      echo "hwk-tester $VERSION"
      exit 0
      ;;
    h)
      echo "Usage: hwk-tester [-j] [-r] [-v] [-h]"
      echo "General options:"
      echo "  -j              # Run tests for JavaScript"
      echo "  -r              # Run tests for Ruby"
      echo "  -v              # Print the version information"
      echo "  -h              # Print usage and options"
      echo "Description:"
      echo "  This script tests a homework solution by:"
      echo "  JavaScript:"
      echo "    (a) running any Jasmine unit tests found in the \"spec\" subdirectory"
      echo "    (b) running jscs"
      echo "  Ruby:"
      echo "    (a) running any RSpec unit tests found in the \"spec\" subdirectory"
      echo "    (b) running rubocop"
      echo ""
      echo "  Prerequisites"
      echo "    (a) installation of jasmine-node: npm install -g jasmine-node"
      echo "    (b) installation of jscs:         npm install -g jscs"
      echo "    (c) installation of rspec:        gem install rspec"
      echo "    (d) installation of rubocop:      gem install rubocop"
      echo ""
      echo "  For more information see:"
      echo "    * https://github.com/mhevery/jasmine-node"
      echo "    * https://github.com/jscs-dev/node-jscs"
      echo "    * http://rspec.info/"
      echo "    * https://github.com/bbatsov/rubocop"
      exit 0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

if [ $TEST_JAVASCRIPT ]; then
  echo "=== Running jasmine-node ==="
  jasmine-node --verbose .

  # echo "=== Running jshint ==="
  # jshint -c ../jshint-options.json *.js

  echo "=== Running jscs ==="
  JSCS_OPTIONS_FILE=$(upsearch jscs-options.json)
  echo "JSCS_OPTIONS_FILE: $JSCS_OPTIONS_FILE"
  jscs -c $JSCS_OPTIONS_FILE *.js
  echo
fi
if [ $TEST_RUBY ]; then
  echo "=== Running RSpec ==="
  rspec
  echo "=== Running Rubocop ==="
  rubocop *.rb
fi
if [[ ! ($TEST_JAVASCRIPT || $TEST_RUBY) ]]; then
  echo "ERROR: Please indicate what you want to test: -j for JavaScript, -r for Ruby"
  exit 1
fi

echo "=== All done! ==="
